{"version":3,"sources":["components/LinkList.module.css","pages/AuthPage.module.css","components/Navbar.module.css","hooks/http.hook.js","context/AuthContext.js","components/Loader.js","hooks/message.hook.js","components/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","useMessage","text","window","M","toast","html","LinksList","links","fetchLinks","useContext","length","map","link","index","id","from","to","_id","key","css","del","onClick","Authorization","LinksPage","props","setLinks","fetched","useEffect","CreatePage","history","useHistory","setLink","handleKeyPress","push","updateTextFields","placeholder","name","type","onChange","value","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","email","password","form","setForm","handleChange","handleRegister","handleLogin","winWidth","margin","disabled","Navbar","handleLogout","e","preventDefault","AutoInit","padding","data-target","burger","App","ready","setReady","setToken","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.71cd2a97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"del\":\"LinkList_del__2X1y_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"winWidth\":\"AuthPage_winWidth__IfyBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"Navbar_burger__1O4Xh\"};","import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n\r\n                headers[\"Content-Type\"] = \"application/json\";\r\n            }\r\n\r\n            const response = await fetch(url, { method, body, headers });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || \"Some thing go wrong!!!\")\r\n            }\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n\r\n            setError(e.message);\r\n\r\n            throw e\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError };\r\n}","import {createContext} from \"react\";\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n   token: null,\r\n   userId: null,\r\n   login: noop,\r\n   logout: noop,\r\n   isAuthenticated: false\r\n});","import React from \"react\";\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div style={{display: \"flex\", justifyContent: \"center\", paddingTop: \"2rem\"}}>\r\n            <div className=\"preloader-wrapper active\">\r\n                <div className=\"spinner-layer spinner-red-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"gap-patch\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"circle-clipper right\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {useCallback} from \"react\";\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        if (window.M && text) {\r\n            window.M.toast({ html: text });\r\n        }\r\n    }, [])\r\n}","import React, {useContext} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport css from \"./LinkList.module.css\"\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\n\r\nexport const LinksList = ({ links, fetchLinks }) => {\r\n    const {request} = useHttp();\r\n    const {token} = useContext(AuthContext);\r\n    const message = useMessage();\r\n\r\n    if (!links.length) {\r\n        return (\r\n            <p className={\"center\"}>\r\n                {\"Ссылок пока нет!\"}\r\n            </p>\r\n        )\r\n    }\r\n\r\n    const handleClick = (id) => async () => {\r\n        try {\r\n                await request(`/api/link/${id}`, \"DELETE\", null, {\r\n                    Authorization: `Bearer ${token}`\r\n                });\r\n\r\n                message(\"Ссылка удалена!\");\r\n\r\n                await fetchLinks();\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table className={\"responsive-table\"}>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Оригинальная</th>\r\n                <th>Сокращенная</th>\r\n                <th>Открыть</th>\r\n                <th>Удалить</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            { links.map((link, index) => {\r\n                const {from, to, _id} = link;\r\n\r\n                return (\r\n                    <tr key={_id}>\r\n                        <td>{index + 1}</td>\r\n\r\n                        <td>{from}</td>\r\n\r\n                        <td>{to}</td>\r\n\r\n                        <td>\r\n                            <Link to={`/detail/${_id}`}>Открыть</Link>\r\n                        </td>\r\n\r\n                        <td>\r\n                            <i\r\n                                className={`large material-icons ${css.del}`}\r\n                                onClick={handleClick(_id)}\r\n                            >\r\n                                {\"delete_forever\"}\r\n                            </i>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n\r\n    );\r\n}","import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {LinksList} from \"../components/LinksList\";\r\n\r\nexport const LinksPage = (props) => {\r\n    const [links, setLinks] = useState([]);\r\n    const {loading, request} = useHttp();\r\n    const {token} = useContext(AuthContext);\r\n\r\n    const fetchLinks = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(\"/api/link\", \"GET\", null, {\r\n                Authorization: `Bearer ${token}`\r\n            });\r\n\r\n            setLinks(fetched);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [token, request]);\r\n\r\n    useEffect(() => {\r\n        fetchLinks();\r\n    }, [fetchLinks]);\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !loading && <LinksList links={links} fetchLinks={fetchLinks}/> }\r\n        </>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const CreatePage = (props) => {\r\n    const history = useHistory();\r\n    const {token} = useContext(AuthContext);\r\n    const {request} = useHttp();\r\n    const [link, setLink] = useState(\"\");\r\n\r\n    const handleChange = ({ target:{ value } }) => setLink(value);\r\n\r\n    const handleKeyPress = async ({key}) => {\r\n        if (key === \"Enter\") {\r\n            try {\r\n                const data = await request(\"api/link/generate\", \"POST\", {from: link}, {\r\n                    Authorization: `Bearer ${token}`\r\n                });\r\n                history.push(`/detail/${data.link._id}`);\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={\"row\"}>\r\n            <div\r\n                className={\"col s8 offset-s2\"}\r\n                style={{paddingTop: \"2rem\"}}\r\n            >\r\n                <div className=\"input-field\">\r\n                    <input\r\n                        placeholder=\"Вставьте ссылку...\"\r\n                        id=\"link\"\r\n                        name={\"link\"}\r\n                        type=\"text\"\r\n                        onChange={handleChange}\r\n                        onKeyPress={handleKeyPress}\r\n                        value={link}\r\n                    />\r\n\r\n                    <label htmlFor=\"link\">Введите ссылку</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const LinkCard = ({ link }) => {\r\n    return (\r\n        <>\r\n            <h2>Ссылка</h2>\r\n\r\n            <p>\r\n                {\"Ваша ссылка:\"}\r\n                <a\r\n                    href={link.to}\r\n                    target={\"_blank\"}\r\n                    rel={\"noopener noreferrer\"}\r\n                >\r\n                    {link.to}\r\n                </a>\r\n            </p>\r\n\r\n            <p>\r\n                {\"Откуда:\"}\r\n                <a\r\n                    href={link.from}\r\n                    target={\"_blank\"}\r\n                    rel={\"noopener noreferrer\"}\r\n                >\r\n                    {link.from}\r\n                </a>\r\n            </p>\r\n\r\n            <p>\r\n                {\"Количество кликов по ссылке:\"}\r\n                <strong>{link.clicks}</strong>\r\n            </p>\r\n\r\n            <p>\r\n                {\"Дата создания:\"}\r\n                <strong>{new Date(link.date).toLocaleDateString()}</strong>\r\n            </p>\r\n        </>\r\n    );\r\n}","import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {LinkCard} from \"../components/LinkCard\";\r\n\r\n\r\nexport const DetailPage = (props) => {\r\n    const {token} = useContext(AuthContext);\r\n    const {request, loading} = useHttp();\r\n    const linkId = useParams().id;\r\n    const [link, setLink] = useState();\r\n\r\n    const getLink = useCallback(async() => {\r\n        try {\r\n            const fetched = await request(`/api/link/${linkId}`, \"GET\", null, {\r\n                Authorization: `Bearer ${token}`\r\n            });\r\n\r\n            setLink(fetched);\r\n        } catch (e) {}\r\n    }, [token, linkId, request])\r\n\r\n    useEffect(()=>{\r\n        getLink();\r\n    }, [getLink]);\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !loading && link && <LinkCard link={link}/>}\r\n        </>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport \"../index.css\"\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport css from \"./AuthPage.module.css\";\r\n\r\nexport const AuthPage = (props) => {\r\n    const {login} = useContext(AuthContext);\r\n    const message = useMessage();\r\n\r\n    const {loading, error, request, clearError} = useHttp()\r\n\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n       message(error);\r\n       clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields();\r\n    }, []);\r\n\r\n\r\n    const handleChange = ({target:{name, value}}) => {\r\n        setForm({...form, [name]: value});\r\n    }\r\n\r\n    const handleRegister = async () => {\r\n        try {\r\n            const data = await  request(\"/api/auth/register\", \"POST\", {...form});\r\n\r\n            message(data.message)        ;\r\n        } catch (e) {}\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            const {token, userId} = await  request(\"/api/auth/login\", \"POST\", {...form});\r\n\r\n            login(token, userId);\r\n        } catch (e) {}\r\n    }\r\n\r\n    return (\r\n        <div className={\"row\"}>\r\n            <div className={css.winWidth}>\r\n                <h2> Сократи ссылку</h2>\r\n\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n\r\n                        <div >\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Input email...\"\r\n                                    id=\"email\"\r\n                                    name={\"email\"}\r\n                                    type=\"text\"\r\n                                    className={\"yellow-input\"}\r\n                                    onChange={handleChange}\r\n                                    value={form.email}\r\n                                />\r\n\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Input password...\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name={\"password\"}\r\n                                    className={\"yellow-input\"}\r\n                                    onChange={handleChange}\r\n                                    value={form.password}\r\n                                />\r\n\r\n                                <label htmlFor=\"password\">Password</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            className={\"btn yellow darken-4\"}\r\n                            style={{margin:10}}\r\n                            disabled={loading}\r\n                            onClick={handleLogin}\r\n                        >\r\n                            {\"Войти\"}\r\n                        </button>\r\n\r\n                        <button\r\n                            className={\"btn grey lighten-1 black-text\"}\r\n                            disabled={loading}\r\n                            onClick={handleRegister}\r\n                        >\r\n                            {\"Регистрация\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useContext, useEffect} from \"react\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport css from \"./Navbar.module.css\";\r\n\r\nexport const Navbar = () => {\r\n    const {logout} = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const handleLogout = (e) => {\r\n        e.preventDefault();\r\n\r\n        logout();\r\n\r\n        history.push(\"/\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.M.AutoInit();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div\r\n                    className=\"nav-wrapper blue darken-1\"\r\n                    style={{padding: \"0 2rem\"}}\r\n                >\r\n                    <span className=\"brand-logo\">{\"Сокращение ссылок\"}</span>\r\n\r\n                    <a\r\n                        href={\"#!\"}\r\n                        data-target=\"mobile-demo\"\r\n                        className={`sidenav-trigger ${css.burger}`}\r\n                    >\r\n                        <i className=\"material-icons\">menu</i>\r\n                    </a>\r\n\r\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                        <li>\r\n                            <NavLink to={\"/create\"}>{\"Создать\"}</NavLink>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <NavLink to={\"/links\"}>{\"Ссылки\"}</NavLink>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <a\r\n                                href=\"/\"\r\n                                onClick={handleLogout}\r\n                            >\r\n                                {\"Выйти\"}\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            <ul\r\n                className={\"sidenav blue lighten-2\"}\r\n                id={\"mobile-demo\"}\r\n            >\r\n                <li>\r\n                    <NavLink\r\n                        className={\"sidenav-close\"}\r\n                        to={\"/create\"}>{\"Создать\"}\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink\r\n                        className={\"sidenav-close\"}\r\n                        to={\"/links\"}>{\"Ссылки\"}</NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <a\r\n                        className={\"sidenav-close\"}\r\n                        href=\"/\"\r\n                        onClick={handleLogout}\r\n                    >\r\n                        {\"Выйти\"}\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport {useRoutes} from \"./routes\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {useAuth} from \"./hooks/auth.hook\";\r\nimport \"materialize-css\";\r\nimport {AuthContext} from \"./context/AuthContext\";\r\nimport {Navbar} from \"./components/Navbar\";\r\nimport {Loader} from \"./components/Loader\";\r\n\r\nfunction App() {\r\n    const {token, login, logout, userId, ready} = useAuth();\r\n    const isAuthenticated = !!token;\r\n    const routes = useRoutes(isAuthenticated);\r\n\r\n    if (!ready) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                token,\r\n                login,\r\n                logout,\r\n                userId,\r\n                isAuthenticated\r\n            }}\r\n        >\r\n            <BrowserRouter>\r\n                { isAuthenticated && <Navbar/> }\r\n                <div className={\"container\"}>\r\n                    {routes}\r\n                </div>\r\n            </BrowserRouter>\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {useState, useCallback, useEffect} from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport const useAuth = () => {\r\n    const [ready, setReady] = useState(false);\r\n    const [token, setToken] = useState(null);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken);\r\n\r\n        setUserId(id);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id,\r\n            token: jwtToken\r\n        }));\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n\r\n        setUserId(null);\r\n\r\n        localStorage.removeItem(storageName);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId);\r\n        }\r\n\r\n        setReady(true);\r\n    }, [login])\r\n\r\n    return { login, logout, token, userId, ready}\r\n\r\n}","import React from \"react\";\r\nimport {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport {LinksPage} from \"./pages/LinksPage\";\r\nimport {CreatePage} from \"./pages/CreatePage\";\r\nimport {DetailPage} from \"./pages/DetailPage\";\r\nimport {AuthPage} from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = isAuthentificated => {\r\n    if (isAuthentificated) {\r\n        return (\r\n            <Switch>\r\n                <Route path={\"/links\"} exact>\r\n                    <LinksPage/>\r\n                </Route>\r\n\r\n                <Route path={\"/create\"} exact>\r\n                    <CreatePage/>\r\n                </Route>\r\n\r\n                <Route path={\"/detail/:id\"} exact>\r\n                    <DetailPage/>\r\n                </Route>\r\n\r\n                <Redirect to={\"/create\"}/>\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={\"/\"} exact>\r\n                <AuthPage/>\r\n            </Route>\r\n\r\n            <Redirect to={\"/\"}/>\r\n        </Switch>\r\n    )\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}